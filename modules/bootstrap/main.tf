resource "null_resource" "bootstrap" {
  connection {
    host = "${data.aws_instance.bootstrap-node.public_ip}"
    user = "${var.bootstrap_user}"
  }

  provisioner "remote-exec" {
    inline = ["mkdir -p /tmp/dcos/genconf"]
  }

  provisioner "file" {
    destination = "/tmp/dcos/genconf/config.yaml"
    content = <<EOF
# Auto-generated by Terraform Templates
# Created on date: ${timestamp()}
bootstrap_url: http://${data.aws_instance.bootstrap-node.private_ip}:${var.bootstrap_serve_port}
cluster_name: ${var.cluster_id}
exhibitor_storage_backend: static
master_discovery: static
master_list:
- ${data.aws_instance.bootstrap-node.private_ip}
resolvers:
- 8.8.8.8
- 8.8.4.4
EOF
  }

  provisioner "file" {
    destination = "/tmp/dcos/genconf/ip-detect"
    content = <<EOF
#!/bin/sh
# Example ip-detect script using an external authority
# Uses the AWS Metadata Service to get the node's internal
# ipv4 address
curl -fsSL http://169.254.169.254/latest/meta-data/local-ipv4
EOF
  }

  provisioner "remote-exec" {
    inline = [
      "cd /tmp/dcos",
      "curl -o dcos_generate_config.sh https://downloads.dcos.io/dcos/stable/1.10.0/dcos_generate_config.sh",
      "bash dcos_generate_config.sh",
      "docker run -d -p ${var.bootstrap_serve_port}:80 -v `pwd`/genconf/serve:/usr/share/nginx/html:ro nginx"
    ]
  }
}